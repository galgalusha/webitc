package webitc.data;

import webitc.common.StrRes;
import webitc.common.SystemInfo;

public class Temperature
  implements Cloneable, Comparable
{
  public final boolean fEnable;
  public final float fTemp;
  static final int sDiffIndex_CtoF = 1279;
  static final int sDiffIndex_FtoC = 198;
  static final int[] sTable_CtoF = { 65338, 65338, 65338, 65338, 65338, 65339, 65339, 65339, 65339, 65339, 65340, 65340, 65340, 65340, 65340, 65340, 65341, 65341, 65341, 65341, 65341, 65342, 65342, 65342, 65342, 65342, 65342, 65343, 65343, 65343, 65343, 65343, 65344, 65344, 65344, 65344, 65344, 65344, 65345, 65345, 65345, 65345, 65345, 65346, 65346, 65346, 65346, 65346, 65346, 65347, 65347, 65347, 65347, 65347, 65347, 65348, 65348, 65348, 65348, 65348, 65349, 65349, 65349, 65349, 65349, 65349, 65350, 65350, 65350, 65350, 65350, 65351, 65351, 65351, 65351, 65351, 65351, 65352, 65352, 65352, 65352, 65352, 65353, 65353, 65353, 65353, 65353, 65353, 65354, 65354, 65354, 65354, 65354, 65355, 65355, 65355, 65355, 65355, 65355, 65356, 65356, 65356, 65356, 65356, 65356, 65357, 65357, 65357, 65357, 65357, 65358, 65358, 65358, 65358, 65358, 65358, 65359, 65359, 65359, 65359, 65359, 65360, 65360, 65360, 65360, 65360, 65360, 65361, 65361, 65361, 65361, 65361, 65362, 65362, 65362, 65362, 65362, 65362, 65363, 65363, 65363, 65363, 65363, 65364, 65364, 65364, 65364, 65364, 65364, 65365, 65365, 65365, 65365, 65365, 65365, 65366, 65366, 65366, 65366, 65366, 65367, 65367, 65367, 65367, 65367, 65367, 65368, 65368, 65368, 65368, 65368, 65369, 65369, 65369, 65369, 65369, 65369, 65370, 65370, 65370, 65370, 65370, 65371, 65371, 65371, 65371, 65371, 65371, 65372, 65372, 65372, 65372, 65372, 65373, 65373, 65373, 65373, 65373, 65373, 65374, 65374, 65374, 65374, 65374, 65374, 65375, 65375, 65375, 65375, 65375, 65376, 65376, 65376, 65376, 65376, 65376, 65377, 65377, 65377, 65377, 65377, 65378, 65378, 65378, 65378, 65378, 65378, 65379, 65379, 65379, 65379, 65379, 65380, 65380, 65380, 65380, 65380, 65380, 65381, 65381, 65381, 65381, 65381, 65382, 65382, 65382, 65382, 65382, 65382, 65383, 65383, 65383, 65383, 65383, 65383, 65384, 65384, 65384, 65384, 65384, 65385, 65385, 65385, 65385, 65385, 65385, 65386, 65386, 65386, 65386, 65386, 65387, 65387, 65387, 65387, 65387, 65387, 65388, 65388, 65388, 65388, 65388, 65389, 65389, 65389, 65389, 65389, 65389, 65390, 65390, 65390, 65390, 65390, 65391, 65391, 65391, 65391, 65391, 65391, 65392, 65392, 65392, 65392, 65392, 65392, 65393, 65393, 65393, 65393, 65393, 65394, 65394, 65394, 65394, 65394, 65394, 65395, 65395, 65395, 65395, 65395, 65396, 65396, 65396, 65396, 65396, 65396, 65397, 65397, 65397, 65397, 65397, 65398, 65398, 65398, 65398, 65398, 65398, 65399, 65399, 65399, 65399, 65399, 65400, 65400, 65400, 65400, 65400, 65400, 65401, 65401, 65401, 65401, 65401, 65401, 65402, 65402, 65402, 65402, 65402, 65403, 65403, 65403, 65403, 65403, 65403, 65404, 65404, 65404, 65404, 65404, 65405, 65405, 65405, 65405, 65405, 65405, 65406, 65406, 65406, 65406, 65406, 65407, 65407, 65407, 65407, 65407, 65407, -128, -128, -128, -128, -128, -127, -127, -127, -127, -127, -127, -126, -126, -126, -126, -126, -126, -125, -125, -125, -125, -125, -124, -124, -124, -124, -124, -124, -123, -123, -123, -123, -123, -122, -122, -122, -122, -122, -122, -121, -121, -121, -121, -121, -120, -120, -120, -120, -120, -120, -119, -119, -119, -119, -119, -118, -118, -118, -118, -118, -118, -117, -117, -117, -117, -117, -117, -116, -116, -116, -116, -116, -115, -115, -115, -115, -115, -115, -114, -114, -114, -114, -114, -113, -113, -113, -113, -113, -113, -112, -112, -112, -112, -112, -111, -111, -111, -111, -111, -111, -110, -110, -110, -110, -110, -109, -109, -109, -109, -109, -109, -108, -108, -108, -108, -108, -108, -107, -107, -107, -107, -107, -106, -106, -106, -106, -106, -106, -105, -105, -105, -105, -105, -104, -104, -104, -104, -104, -104, -103, -103, -103, -103, -103, -102, -102, -102, -102, -102, -102, -101, -101, -101, -101, -101, -100, -100, -100, -100, -100, -100, -99, -99, -99, -99, -99, -99, -98, -98, -98, -98, -98, -97, -97, -97, -97, -97, -97, -96, -96, -96, -96, -96, -95, -95, -95, -95, -95, -95, -94, -94, -94, -94, -94, -93, -93, -93, -93, -93, -93, -92, -92, -92, -92, -92, -91, -91, -91, -91, -91, -91, -90, -90, -90, -90, -90, -90, -89, -89, -89, -89, -89, -88, -88, -88, -88, -88, -88, -87, -87, -87, -87, -87, -86, -86, -86, -86, -86, -86, -85, -85, -85, -85, -85, -84, -84, -84, -84, -84, -84, -83, -83, -83, -83, -83, -82, -82, -82, -82, -82, -82, -81, -81, -81, -81, -81, -81, -80, -80, -80, -80, -80, -79, -79, -79, -79, -79, -79, -78, -78, -78, -78, -78, -77, -77, -77, -77, -77, -77, -76, -76, -76, -76, -76, -75, -75, -75, -75, -75, -75, -74, -74, -74, -74, -74, -73, -73, -73, -73, -73, -73, -72, -72, -72, -72, -72, -72, -71, -71, -71, -71, -71, -70, -70, -70, -70, -70, -70, -69, -69, -69, -69, -69, -68, -68, -68, -68, -68, -68, -67, -67, -67, -67, -67, -66, -66, -66, -66, -66, -66, -65, -65, -65, -65, -65, -64, -64, -64, -64, -64, -64, -63, -63, -63, -63, -63, -63, -62, -62, -62, -62, -62, -61, -61, -61, -61, -61, -61, -60, -60, -60, -60, -60, -59, -59, -59, -59, -59, -59, -58, -58, -58, -58, -58, -57, -57, -57, -57, -57, -57, -56, -56, -56, -56, -56, -55, -55, -55, -55, -55, -55, -54, -54, -54, -54, -54, -54, -53, -53, -53, -53, -53, -52, -52, -52, -52, -52, -52, -51, -51, -51, -51, -51, -50, -50, -50, -50, -50, -50, -49, -49, -49, -49, -49, -48, -48, -48, -48, -48, -48, -47, -47, -47, -47, -47, -46, -46, -46, -46, -46, -46, -45, -45, -45, -45, -45, -45, -44, -44, -44, -44, -44, -43, -43, -43, -43, -43, -43, -42, -42, -42, -42, -42, -41, -41, -41, -41, -41, -41, -40, -40, -40, -40, -40, -39, -39, -39, -39, -39, -39, -38, -38, -38, -38, -38, -37, -37, -37, -37, -37, -37, -36, -36, -36, -36, -36, -36, -35, -35, -35, -35, -35, -34, -34, -34, -34, -34, -34, -33, -33, -33, -33, -33, -32, -32, -32, -32, -32, -32, -31, -31, -31, -31, -31, -30, -30, -30, -30, -30, -30, -29, -29, -29, -29, -29, -28, -28, -28, -28, -28, -28, -27, -27, -27, -27, -27, -27, -26, -26, -26, -26, -26, -25, -25, -25, -25, -25, -25, -24, -24, -24, -24, -24, -23, -23, -23, -23, -23, -23, -22, -22, -22, -22, -22, -21, -21, -21, -21, -21, -21, -20, -20, -20, -20, -20, -19, -19, -19, -19, -19, -19, -18, -18, -18, -18, -18, -18, -17, -17, -17, -17, -17, -16, -16, -16, -16, -16, -16, -15, -15, -15, -15, -15, -14, -14, -14, -14, -14, -14, -13, -13, -13, -13, -13, -12, -12, -12, -12, -12, -12, -11, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -9, -9, -9, -9, -9, -9, -8, -8, -8, -8, -8, -7, -7, -7, -7, -7, -7, -6, -6, -6, -6, -6, -5, -5, -5, -5, -5, -5, -4, -4, -4, -4, -4, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 41, 41, 41, 41, 41, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 46, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 52, 52, 52, 52, 52, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 66, 67, 67, 67, 67, 67, 67, 68, 68, 68, 68, 68, 69, 69, 69, 69, 69, 69, 70, 70, 70, 70, 70, 71, 71, 71, 71, 71, 71, 72, 72, 72, 72, 72, 72, 73, 73, 73, 73, 73, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 76, 76, 76, 76, 76, 76, 77, 77, 77, 77, 77, 78, 78, 78, 78, 78, 78, 79, 79, 79, 79, 79, 80, 80, 80, 80, 80, 80, 81, 81, 81, 81, 81, 81, 82, 82, 82, 82, 82, 83, 83, 83, 83, 83, 83, 84, 84, 84, 84, 84, 85, 85, 85, 85, 85, 85, 86, 86, 86, 86, 86, 87, 87, 87, 87, 87, 87, 88, 88, 88, 88, 88, 89, 89, 89, 89, 89, 89, 90, 90, 90, 90, 90, 90, 91, 91, 91, 91, 91, 92, 92, 92, 92, 92, 92, 93, 93, 93, 93, 93, 94, 94, 94, 94, 94, 94, 95, 95, 95, 95, 95, 96, 96, 96, 96, 96, 96, 97, 97, 97, 97, 97, 98, 98, 98, 98, 98, 98, 99, 99, 99, 99, 99, 99, 100, 100, 100, 100, 100, 101, 101, 101, 101, 101, 101, 102, 102, 102, 102, 102, 103, 103, 103, 103, 103, 103, 104, 104, 104, 104, 104, 105, 105, 105, 105, 105, 105, 106, 106, 106, 106, 106, 107, 107, 107, 107, 107, 107, 108, 108, 108, 108, 108, 108, 109, 109, 109, 109, 109, 110, 110, 110, 110, 110, 110, 111, 111, 111, 111, 111, 112, 112, 112, 112, 112, 112, 113, 113, 113, 113, 113, 114, 114, 114, 114, 114, 114, 115, 115, 115, 115, 115, 116, 116, 116, 116, 116, 116, 117, 117, 117, 117, 117, 117, 118, 118, 118, 118, 118, 119, 119, 119, 119, 119, 119, 120, 120, 120, 120, 120, 121, 121, 121, 121, 121, 121, 122, 122, 122, 122, 122, 123, 123, 123, 123, 123, 123, 124, 124, 124, 124, 124, 125, 125, 125, 125, 125, 125, 126, 126, 126, 126, 126, 126, 127, 127, 127, 127, 127, 128, 128, 128, 128, 128, 128, 129, 129, 129, 129, 129, 130, 130, 130, 130, 130, 130, 131, 131, 131, 131, 131, 132, 132, 132, 132, 132, 132, 133, 133, 133, 133, 133, 134, 134, 134, 134, 134, 134, 135, 135, 135, 135, 135, 135, 136, 136, 136, 136, 136, 137, 137, 137, 137, 137, 137, 138, 138, 138, 138, 138, 139, 139, 139, 139, 139, 139, 140, 140, 140, 140, 140, 141, 141, 141, 141, 141, 141, 142, 142, 142, 142, 142, 143, 143, 143, 143, 143, 143, 144, 144, 144, 144, 144, 144, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 150, 150, 150, 150, 150, 150, 151, 151, 151, 151, 151, 152, 152, 152, 152, 152, 152, 153, 153, 153, 153, 153, 153, 154, 154, 154, 154, 154, 155, 155, 155, 155, 155, 155, 156, 156, 156, 156, 156, 157, 157, 157, 157, 157, 157, 158, 158, 158, 158, 158, 159, 159, 159, 159, 159, 159, 160, 160, 160, 160, 160, 161, 161, 161, 161, 161, 161, 162, 162, 162, 162, 162, 162, 163, 163, 163, 163, 163, 164, 164, 164, 164, 164, 164, 165, 165, 165, 165, 165, 166, 166, 166, 166, 166, 166, 167, 167, 167, 167, 167, 168, 168, 168, 168, 168, 168, 169, 169, 169, 169, 169, 170, 170, 170, 170, 170, 170, 171, 171, 171, 171, 171, 171, 172, 172, 172, 172, 172, 173, 173, 173, 173, 173, 173, 174, 174, 174, 174, 174, 175, 175, 175, 175, 175, 175, 176, 176, 176, 176, 176, 177, 177, 177, 177, 177, 177, 178, 178, 178, 178, 178, 179, 179, 179, 179, 179, 179, 180, 180, 180, 180, 180, 180, 181, 181, 181, 181, 181, 182, 182, 182, 182, 182, 182, 183, 183, 183, 183, 183, 184, 184, 184, 184, 184, 184, 185, 185, 185, 185, 185, 186, 186, 186, 186, 186, 186, 187, 187, 187, 187, 187, 188, 188, 188, 188, 188, 188, 189, 189, 189, 189, 189, 189, 190, 190, 190, 190, 190, 191, 191, 191, 191, 191, 191, 192, 192, 192, 192, 192, 193, 193, 193, 193, 193, 193, 194, 194, 194, 194, 194, 195, 195, 195, 195, 195, 195, 196, 196, 196, 196, 196, 197, 197, 197, 197, 197, 197, 198, 198, 198, 198, 198, 198, 199, 199, 199, 199, 199, 200, 200, 200, 200, 200, 200, 201, 201, 201, 201, 201, 202, 202, 202, 202, 202, 202, 203, 203, 203, 203, 203, 204, 204, 204, 204, 204, 204, 205, 205, 205, 205, 205, 206, 206, 206, 206, 206, 206, 207, 207, 207, 207, 207, 207, 208, 208, 208, 208, 208, 209, 209, 209, 209, 209, 209, 210, 210, 210, 210, 210, 211, 211, 211, 211, 211, 211, 212, 212, 212, 212, 212, 213, 213, 213, 213, 213, 213, 214, 214, 214, 214, 214, 215, 215, 215, 215, 215, 215, 216, 216, 216, 216, 216, 216, 217, 217, 217, 217, 217, 218, 218, 218, 218, 218, 218, 219, 219, 219, 219, 219, 220, 220, 220, 220, 220, 220, 221, 221, 221, 221, 221, 222, 222, 222, 222, 222, 222, 223, 223, 223, 223, 223, 224, 224, 224, 224, 224, 224, 225, 225, 225, 225, 225, 225, 226, 226, 226, 226, 226, 227, 227, 227, 227, 227, 227, 228, 228, 228, 228, 228, 229, 229, 229, 229, 229, 229, 230, 230, 230, 230, 230, 231, 231, 231, 231, 231, 231, 232, 232, 232, 232, 232, 233, 233, 233, 233, 233, 233, 234, 234, 234, 234, 234, 234, 235, 235, 235, 235, 235, 236, 236, 236, 236, 236, 236, 237, 237, 237, 237, 237, 238, 238, 238, 238, 238, 238, 239, 239, 239, 239, 239, 240, 240, 240, 240, 240, 240, 241, 241, 241, 241, 241, 242, 242, 242, 242, 242, 242, 243, 243, 243, 243, 243, 243, 244, 244, 244, 244, 244, 245, 245, 245, 245, 245, 245, 246, 246, 246, 246, 246, 247, 247, 247, 247, 247, 247, 248, 248, 248, 248, 248, 249, 249, 249, 249, 249, 249, 250, 250, 250, 250, 250, 251, 251, 251, 251, 251, 251, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 254, 254, 254, 254, 254, 254, 255, 255, 255, 255, 255, 256, 256, 256, 256, 256, 256, 257, 257, 257, 257, 257, 258, 258, 258, 258, 258, 258, 259, 259, 259, 259, 259, 260, 260, 260, 260, 260, 260, 261, 261, 261, 261, 261, 261, 262, 262, 262, 262 };
  static final float[] sTable_FtoC = { -127.8F, -127.2F, -126.7F, -126.1F, -125.6F, -125.0F, -124.4F, -123.9F, -123.3F, -122.8F, -122.2F, -121.7F, -121.1F, -120.6F, -120.0F, -119.4F, -118.9F, -118.3F, -117.8F, -117.2F, -116.7F, -116.1F, -115.6F, -115.0F, -114.4F, -113.9F, -113.3F, -112.8F, -112.2F, -111.7F, -111.1F, -110.6F, -110.0F, -109.4F, -108.9F, -108.3F, -107.8F, -107.2F, -106.7F, -106.1F, -105.6F, -105.0F, -104.4F, -103.9F, -103.3F, -102.8F, -102.2F, -101.7F, -101.1F, -100.6F, -100.0F, -99.4F, -98.9F, -98.3F, -97.8F, -97.2F, -96.7F, -96.1F, -95.6F, -95.0F, -94.4F, -93.9F, -93.3F, -92.8F, -92.2F, -91.7F, -91.1F, -90.6F, -90.0F, -89.4F, -88.9F, -88.3F, -87.8F, -87.2F, -86.7F, -86.1F, -85.6F, -85.0F, -84.4F, -83.9F, -83.3F, -82.8F, -82.2F, -81.7F, -81.1F, -80.6F, -80.0F, -79.4F, -78.9F, -78.3F, -77.8F, -77.2F, -76.7F, -76.1F, -75.6F, -75.0F, -74.4F, -73.9F, -73.3F, -72.8F, -72.2F, -71.7F, -71.1F, -70.6F, -70.0F, -69.4F, -68.9F, -68.3F, -67.8F, -67.2F, -66.7F, -66.1F, -65.6F, -65.0F, -64.4F, -63.9F, -63.3F, -62.8F, -62.2F, -61.7F, -61.1F, -60.6F, -60.0F, -59.4F, -58.9F, -58.3F, -57.8F, -57.2F, -56.7F, -56.1F, -55.6F, -55.0F, -54.4F, -53.9F, -53.3F, -52.8F, -52.2F, -51.7F, -51.1F, -50.6F, -50.0F, -49.4F, -48.9F, -48.3F, -47.8F, -47.2F, -46.7F, -46.1F, -45.6F, -45.0F, -44.4F, -43.9F, -43.3F, -42.8F, -42.2F, -41.7F, -41.1F, -40.6F, -40.0F, -39.4F, -38.9F, -38.3F, -37.8F, -37.2F, -36.7F, -36.1F, -35.6F, -35.0F, -34.4F, -33.9F, -33.3F, -32.8F, -32.2F, -31.7F, -31.1F, -30.6F, -30.0F, -29.4F, -28.9F, -28.3F, -27.8F, -27.2F, -26.7F, -26.1F, -25.6F, -25.0F, -24.4F, -23.9F, -23.3F, -22.8F, -22.2F, -21.7F, -21.1F, -20.6F, -20.0F, -19.4F, -18.9F, -18.3F, -17.8F, -17.2F, -16.7F, -16.1F, -15.6F, -15.0F, -14.4F, -13.9F, -13.3F, -12.8F, -12.2F, -11.7F, -11.1F, -10.6F, -10.0F, -9.4F, -8.9F, -8.3F, -7.8F, -7.2F, -6.7F, -6.1F, -5.6F, -5.0F, -4.4F, -3.9F, -3.3F, -2.8F, -2.2F, -1.7F, -1.1F, -0.6F, 0.0F, 0.6F, 1.1F, 1.7F, 2.2F, 2.8F, 3.3F, 3.9F, 4.4F, 5.0F, 5.6F, 6.1F, 6.7F, 7.2F, 7.8F, 8.3F, 8.9F, 9.4F, 10.0F, 10.6F, 11.1F, 11.7F, 12.2F, 12.8F, 13.3F, 13.9F, 14.4F, 15.0F, 16.0F, 16.1F, 16.7F, 17.2F, 17.8F, 18.3F, 18.9F, 19.4F, 20.0F, 20.6F, 21.1F, 21.7F, 22.2F, 22.8F, 23.3F, 23.9F, 24.4F, 25.0F, 25.6F, 26.1F, 26.7F, 27.2F, 27.8F, 28.3F, 28.9F, 29.4F, 30.0F, 30.6F, 31.1F, 31.7F, 32.0F, 32.8F, 33.3F, 33.9F, 34.4F, 35.0F, 35.6F, 36.1F, 36.7F, 37.2F, 37.8F, 38.3F, 38.9F, 39.4F, 40.0F, 40.6F, 41.1F, 41.7F, 42.2F, 42.8F, 43.3F, 43.9F, 44.4F, 45.0F, 45.6F, 46.1F, 46.7F, 47.2F, 47.8F, 48.3F, 48.9F, 49.4F, 50.0F, 50.6F, 51.1F, 51.7F, 52.2F, 52.8F, 53.3F, 53.9F, 54.4F, 55.0F, 55.6F, 56.1F, 56.7F, 57.2F, 57.8F, 58.3F, 58.9F, 59.4F, 60.0F, 60.6F, 61.1F, 61.7F, 62.2F, 62.8F, 63.3F, 63.9F, 64.4F, 65.0F, 65.6F, 66.1F, 66.7F, 67.2F, 67.8F, 68.3F, 68.9F, 69.4F, 70.0F, 70.6F, 71.1F, 71.7F, 72.2F, 72.8F, 73.3F, 73.9F, 74.4F, 75.0F, 75.6F, 76.1F, 76.7F, 77.2F, 77.8F, 78.3F, 78.9F, 79.4F, 80.0F, 80.6F, 81.1F, 81.7F, 82.2F, 82.8F, 83.3F, 83.9F, 84.4F, 85.0F, 85.6F, 86.1F, 86.7F, 87.2F, 87.8F, 88.3F, 88.9F, 89.4F, 90.0F, 90.6F, 91.1F, 91.7F, 92.2F, 92.8F, 93.3F, 93.9F, 94.4F, 95.0F, 95.6F, 96.1F, 96.7F, 97.2F, 97.8F, 98.3F, 98.9F, 99.4F, 100.0F, 100.6F, 101.1F, 101.7F, 102.2F, 102.8F, 103.3F, 103.9F, 104.4F, 105.0F, 105.6F, 106.1F, 106.7F, 107.2F, 107.8F, 108.3F, 108.9F, 109.4F, 110.0F, 110.6F, 111.1F, 111.7F, 112.2F, 112.8F, 113.3F, 113.9F, 114.4F, 115.0F, 115.6F, 116.1F, 116.7F, 117.2F, 117.8F, 118.3F, 118.9F, 119.4F, 120.0F, 120.6F, 121.1F, 121.7F, 122.2F, 122.8F, 123.3F, 123.9F, 124.4F, 125.0F, 125.6F, 126.1F, 126.7F, 127.2F, 127.8F };
  
  public Temperature(byte paramByte1, byte paramByte2)
  {
    fEnable = false;
    if (paramByte1 >= 0) {
      fTemp = (paramByte1 + paramByte2 / 10.0F);
    } else {
      fTemp = (paramByte1 - paramByte2 / 10.0F);
    }
  }
  
  public Temperature(boolean paramBoolean, float paramFloat)
  {
    fEnable = paramBoolean;
    fTemp = paramFloat;
  }
  
  public Temperature()
  {
    fEnable = false;
    fTemp = 0.0F;
  }
  
  public Object clone()
  {
    Temperature localTemperature = new Temperature(fEnable, fTemp);
    return localTemperature;
  }
  
  public int compareTo(Object paramObject)
  {
    Temperature localTemperature = (Temperature)paramObject;
    if (fTemp > fTemp) {
      return 1;
    }
    if (fTemp < fTemp) {
      return -1;
    }
    return 0;
  }
  
  public static int convertCtoF(float paramFloat)
  {
    int i = (int)((paramFloat + (paramFloat >= 0.0F ? 0.05D : -0.05D)) * 10.0D) + 1279;
    if ((i < 0) || (i >= sTable_CtoF.length)) {
      return (int)(9.0F * paramFloat / 5.0F + 32.0F + (paramFloat >= 0.0F ? 0.5D : -0.5D));
    }
    return sTable_CtoF[i];
  }
  
  public static float convertFtoC(int paramInt)
  {
    int i = paramInt + 198;
    if (i < 0) {
      i = 0;
    }
    if (i >= sTable_FtoC.length) {
      i = sTable_FtoC.length - 1;
    }
    return sTable_FtoC[i];
  }
  
  public float getCentigrade()
  {
    return fTemp;
  }
  
  public byte getCentigradeDecimal()
  {
    float f = fTemp * (fTemp >= 0.0F ? 1 : -1);
    int i = (byte)(int)f;
    byte b = (byte)(int)((f - i + 0.05F) * 10.0F);
    return b;
  }
  
  public byte getCentigradeInteger()
  {
    if (fTemp > 127.0F) {
      return Byte.MAX_VALUE;
    }
    if (fTemp < -127.0F) {
      return -127;
    }
    return (byte)(int)fTemp;
  }
  
  public int getDecimal(int paramInt)
  {
    if (!SystemInfo.isCentigrade()) {
      return 0;
    }
    float f = fTemp;
    for (int i = 0; i < paramInt; i++) {
      f *= 10.0F;
    }
    int j = (int)f % 10;
    if (j < 0) {
      j = -j;
    }
    return j;
  }
  
  public int getFahrenheit()
  {
    return convertCtoF(fTemp);
  }
  
  public String getStr()
  {
    if (fEnable == true)
    {
      int i = (int)(fTemp * 10.0F);
      int j = i % 10;
      if (j < 0) {
        j = -j;
      }
      if (SystemInfo.isCentigrade() == true) {
        return new String(i / 10 + "." + j + StrRes.getStr("IDS_COMMON_UNIT_TEMP"));
      }
      return new String(convertCtoF(fTemp) + StrRes.getStr("IDS_COMMON_UNIT_TEMP_F"));
    }
    return StrRes.getStr("IDS_COMMON_UNKNOWN");
  }
}
